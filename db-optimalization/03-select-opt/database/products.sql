-- MySQL Script generated by MySQL Workbench
-- Thu Mar 10 13:59:23 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema products
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema products
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `products` DEFAULT CHARACTER SET utf8 ;
USE `products` ;

-- -----------------------------------------------------
-- Table `products`.`vendor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `products`.`vendor` (
  `id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `products` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `products`.`product` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `price` DECIMAL(10,2) NOT NULL,
  `vendor_id` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_vendor_idx` (`vendor_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_vendor`
    FOREIGN KEY (`vendor_id`)
    REFERENCES `products`.`vendor` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `products`;

DELIMITER $$
USE `products`$$
CREATE 
    DEFINER = CURRENT_USER 
    TRIGGER  `products` . `product_ai`
 AFTER INSERT ON `product` FOR EACH ROW 
    BEGIN 
    UPDATE vendor SET products = products + 1 WHERE id = NEW.vendor_id;
    END$$

USE `products`$$
CREATE DEFINER = CURRENT_USER TRIGGER `products`.`product_au` AFTER UPDATE ON `product` FOR EACH ROW
BEGIN
 IF OLD.vendor_id <> NEW.vendor_id THEN
    SET @product_count = (SELECT COUNT(id) FROM product WHERE vendor_id = NEW.vendor_id);
	UPDATE vendor 
SET 
    products = @product_count
WHERE
    id = NEW.vendor_id;    
    SET @product_count = (SELECT COUNT(id) FROM product WHERE vendor_id = OLD.vendor_id);
UPDATE vendor 
SET 
    products = @product_count
WHERE
    id = OLD.vendor_id;    
  END IF;
END$$

USE `products`$$
CREATE DEFINER = CURRENT_USER TRIGGER `products`.`product_ad` AFTER DELETE ON `product` FOR EACH ROW
BEGIN
UPDATE vendor SET products = products - 1 WHERE id = OLD.vendor_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
